-- Initialize sequences table

Insert into TB_SEQUENCES(SEQUENCE_NAME, SEQUENCE_NEXT_VALUE) VALUES ('M_CONCEPT_TYPES', 1);
Insert into TB_SEQUENCES(SEQUENCE_NAME, SEQUENCE_NEXT_VALUE) VALUES ('M_ORG_SCHEMES_VERSIONS', 1);
Insert into TB_SEQUENCES(SEQUENCE_NAME, SEQUENCE_NEXT_VALUE) VALUES ('M_ORGANISATIONS', 1);
Insert into TB_SEQUENCES(SEQUENCE_NAME, SEQUENCE_NEXT_VALUE) VALUES ('M_DIMENSION_ORDERS', 1);
Insert into TB_SEQUENCES(SEQUENCE_NAME, SEQUENCE_NEXT_VALUE) VALUES ('M_MEASURE_DIM_PRECISIONS', 1);
Insert into TB_SEQUENCES(SEQUENCE_NAME, SEQUENCE_NEXT_VALUE) VALUES ('MISC_VALUES', 1);
Insert into TB_SEQUENCES(SEQUENCE_NAME, SEQUENCE_NEXT_VALUE) VALUES ('M_VARIABLES', 1);
Insert into TB_SEQUENCES(SEQUENCE_NAME, SEQUENCE_NEXT_VALUE) VALUES ('M_VARIABLE_ELEMENTS', 1);

-- Create GET_NEXT_SEQUENCE_VALUE function

CREATE OR REPLACE FUNCTION GET_NEXT_SEQUENCE_VALUE(sequence_name_in varchar) RETURNS BIGINT AS $$
  DECLARE sequence_next_value_out BIGINT;
  BEGIN
    SELECT SEQUENCE_NEXT_VALUE INTO sequence_next_value_out
    FROM TB_SEQUENCES 
    WHERE SEQUENCE_NAME = sequence_name_in;
    RETURN (sequence_next_value_out);
  END;
$$ LANGUAGE plpgsql;

