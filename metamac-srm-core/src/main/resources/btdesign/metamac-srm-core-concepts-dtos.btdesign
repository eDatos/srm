import "classpath:/btdesign/metamac-core-common-dtos.btdesign"
import "classpath:/btdesign/statistic-sdmx-v2_1-domain-dtos-common.btdesign"
import "classpath:/btdesign/statistic-sdmx-v2_1-domain-dtos-concepts.btdesign"
import "classpath:/btdesign/metamac-srm-core-enum.btdesign"
import "classpath:/btdesign/metamac-srm-core-concepts-enum.btdesign"
import "classpath:/btdesign/metamac-srm-core-base-dtos.btdesign"

Application DtosMetamacConceptDomain {
	basePackage=unused

	Module domain_metamac_concept_dto {
		basePackage=org.siemac.metamac.srm.core.concept.dto
		
		"Dto for ConceptSchemeMetamac"
		DataTransferObject ConceptSchemeMetamacDto extends @ConceptSchemeDto {
			"Type"
			- @ConceptSchemeTypeEnum type required;
			"Related operation, only when type is Operation"
			- @ExternalItemDto relatedOperation nullable;
			"Life cycle"
			- @LifeCycleDto lifeCycle required;
		}

		"Dto for ConceptSchemeMetamac"
		DataTransferObject ConceptSchemeMetamacBasicDto extends @ItemSchemeMetamacBasicDto {
			"Type"
			- @ConceptSchemeTypeEnum type required;
			"Related operation, only when type is Operation"
			- @ExternalItemDto relatedOperation;
		}		
		
		"Dto for ConceptMetamac"
		DataTransferObject ConceptMetamacDto extends @ConceptDto {
			- @InternationalStringDto pluralName nullable;
			- @InternationalStringDto acronym nullable;
			- @InternationalStringDto descriptionSource nullable;
			- @InternationalStringDto context nullable;
			- @InternationalStringDto docMethod nullable;
			- @ConceptRoleEnum sdmxRelatedArtefact nullable;
			- @ConceptTypeDto conceptType nullable;			
			- @InternationalStringDto derivation nullable;
			- @InternationalStringDto legalActs nullable;
			- @RelatedResourceDto conceptExtends nullable;
			- @RelatedResourceDto variable nullable;
			- @QuantityDto quantity nullable;
		}
		
		"Dto for ConceptMetamac"
		DataTransferObject ConceptMetamacBasicDto extends @ItemMetamacBasicDto {
			- @InternationalStringDto acronym nullable;
			- @RelatedResourceDto variable nullable;
			- @ConceptRoleEnum sdmxRelatedArtefact nullable;
		}
		
		"Dto for Quatity"
	    DataTransferObject QuantityDto {
	    	gap
        	
	    	"Type"
			- @QuantityTypeEnum quantityType nullable;
			"Unit"
			- @RelatedResourceDto unitCode nullable;
			"Position of symbol of unit"
			- @QuantityUnitSymbolPositionEnum unitSymbolPosition nullable;
			"Number of significant digits to use when displaying the values of a metric concept"
			Integer significantDigits nullable;
			"Number of decimal places to use for displaying the values of a metric concept"
			Integer decimalPlaces nullable;
			"Multiplier of percentage"
			Integer unitMultiplier nullable;
			"Min. Only when Quantity is Magnitude"
			Integer minimum nullable;
			"Max. Only when Quantity is Magnitude"
			Integer maximum nullable;
			"Numerator of the fraction. Only when Quantity is Fraction"
			- @RelatedResourceDto numerator nullable;
			"Denominator of the fraction. Only when Quantity is Fraction"
			- @RelatedResourceDto denominator nullable;
			"True if is a percentage. Only when Quantity is Ratio"
			Boolean isPercentage nullable;
			"In percentages, descriptive text to display next to number that specifies what this is a percentage of. Only when Quantity is Ratio"
			- @InternationalStringDto percentageOf nullable;
			"Value base. Only when Quantity is Index"
			Integer baseValue nullable;
			"Time value base. Only when Quantity is Index"
			String baseTime nullable;
            "Geographical value base. Only when Quantity is Index"
			- @RelatedResourceDto baseLocation nullable;
			"Base quantity. Only when Quantity is Change Rate"
			- @RelatedResourceDto baseQuantity nullable;
	    }
		
        "Dto for ConceptType"
        DataTransferObject ConceptTypeDto extends @IdentityDto {
            String identifier;
            - @InternationalStringDto description nullable;
        }
	}
}