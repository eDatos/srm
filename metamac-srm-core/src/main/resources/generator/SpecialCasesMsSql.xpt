«IMPORT sculptormetamodel»
«EXTENSION extensions::helper»
«EXTENSION extensions::dbhelper»
«EXTENSION extensions::properties» 



«AROUND templates::domain::DomainObjectAttributeAnnotation::columnAnnotations FOR Attribute»
	«IF type == "DateTimeTZ"»
		@org.hibernate.annotations.Columns(columns={@javax.persistence.Column(name="«getDatabaseName()»"),@javax.persistence.Column(name="«getDatabaseName()»_TZ")})
		@org.hibernate.annotations.Type(type="org.jadira.usertype.dateandtime.joda.PersistentDateTimeWithZone")
	«ELSE»
    	«targetDef.proceed()»
    «ENDIF»
«ENDAROUND»

«AROUND templates::domain::DomainObjectAttributeAnnotation::auditAnnotations FOR Attribute»
	«IF type == "DateTime"»
		@org.hibernate.annotations.Columns(columns={@javax.persistence.Column(name="«getDatabaseName()»"),@javax.persistence.Column(name="«getDatabaseName()»_TZ")})
		@org.hibernate.annotations.Type(type="org.jadira.usertype.dateandtime.joda.PersistentDateTimeWithZone")
	«ELSE»
	     «targetDef.proceed()»
    «ENDIF»
«ENDAROUND»

«AROUND templates::db::OracleDDL::column(String prefix, boolean parentIsNullable) FOR Attribute-»
  «IF type == "DateTimeTZ" || name == "lastUpdated" || name == "createdDate"»«getDatabaseName()»_TZ VARCHAR2(50)«parentIsNullable || nullable ? "" : getDatabaseTypeNullability()-»,
  «ENDIF-»
  «targetDef.proceed()-»
«ENDAROUND»

«AROUND templates::db::CustomDDL::column(String prefix, boolean parentIsNullable) FOR Attribute-»
  «IF type == "DateTimeTZ" || name == "lastUpdated" || name == "createdDate"»«getDatabaseName()»_TZ VARCHAR2(50)«parentIsNullable || nullable ? "" : getDatabaseTypeNullability()-»,
  «ENDIF-»
  «targetDef.proceed()-»
«ENDAROUND»

«AROUND templates::domain::DomainObjectProperties::domainObjectProperties FOR DomainObject-»
	«IF name.endsWith("Dto")»

	«ELSE»
     «targetDef.proceed()»
    «ENDIF»	
«ENDAROUND»


«AROUND templates::domain::DomainObject::clone FOR DomainObject-»

«ENDAROUND»


«REM»
«AROUND templates::domain::DomainObjectAttributeAnnotation::idAnnotations FOR Attribute»
    «IF getDomainObject().hasHint("idSequence")»
        @javax.persistence.Id
        @javax.persistence.SequenceGenerator(name="«getDomainObject().getHint('idSequence')»", sequenceName="SEQ_«getDomainObject().getHint('idSequence')»", allocationSize=1)
        @javax.persistence.GeneratedValue(strategy=javax.persistence.GenerationType.SEQUENCE,
            generator="«getDomainObject().getHint('idSequence')»")
        @javax.persistence.Column(name="«getDatabaseName()»")
    «ELSE»
    	«targetDef.proceed()»
    «ENDIF»
«ENDAROUND»
«ENDREM»

«REM»Skip unique constraint in InternationalString and LocalisedString this will be for "id", and primary key restriction already exists for this attribute «ENDREM»
«AROUND templates::db::OracleDDL::uniqueConstraint FOR DomainObject»
	«IF name != "InternationalString" && name != "LocalisedString" && name != "ExternalItem" && name != "ConceptType"-»
		«targetDef.proceed() -»
	«ENDIF -»
«ENDAROUND»

«REM»HibernateSequence is not needed in this project «ENDREM»
«AROUND templates::db::OracleDDL::dropSequence FOR Application»
«ENDAROUND»

«REM»HibernateSequence is not needed in this project «ENDREM»
«AROUND templates::db::OracleDDL::createSequence FOR Application»
«ENDAROUND»

«REM»Inclusion of a BasicType in an Entity«ENDREM»
«AROUND templates::domain::DomainObjectReferenceAnnotation::basicTypeJpaAnnotation FOR Reference»
	«IF name == "lifeCycleMetadata"-»
		@javax.persistence.Embedded
		«REM»Nothing more due to a bug with joda time columns. AttributeOverride is not necessary because prefix column name is not specified«ENDREM»
	«ELSE»
    	«targetDef.proceed()»
    «ENDIF»
«ENDAROUND»