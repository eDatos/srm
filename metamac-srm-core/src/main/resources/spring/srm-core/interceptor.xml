<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:jee="http://www.springframework.org/schema/jee" xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd 
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd"
    default-autowire="byName">


    <!-- Interceptors -->
    <bean id="jpaInterceptorFlushEagerCore" class="org.springframework.orm.jpa.JpaInterceptor">
        <property name="entityManagerFactory" ref="entityManagerFactoryCore" />
        <!-- Need to flush to detect OptimisticLockingException and do proper rollback. -->
        <property name="flushEager" value="true" />
    </bean>

    <!-- Logging interceptor -->
    <bean id="loggingHandlingAdvice" class="org.siemac.metamac.core.common.aop.LoggingInterceptor" />

    <!-- |_ General Advices -->
    <import resource="classpath:/spring/general-beans-advice.xml" />

    <tx:advice id="txAdviceCore" transaction-manager="txManagerCore">
        <tx:attributes>
            <!-- all methods starting with 'get' or 'find' are read-only -->
            <tx:method name="get*" read-only="true" />
            <tx:method name="find*" read-only="true" />
            <!-- all other methods are transactional and ApplicationException will cause rollback -->
            <tx:method name="*" read-only="false" rollback-for="org.siemac.metamac.core.common.exception.MetamacException,org.fornax.cartridges.sculptor.framework.errorhandling.ApplicationException" />
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="businessServiceFacadeCore" expression="execution(public * org.siemac.metamac..core*..*ServiceFacade.*(..))" />
        <!-- Repeating the expression, since I can't find a way to refer to the other pointcuts. -->
        <aop:pointcut id="updatingBusinessServiceFacadeCore"
            expression="execution(public * org.siemac.metamac..core*..*ServiceFacade.*(..)) and not (execution(public * org.siemac.metamac..core*..*.retrieve*(..)) or execution(public * org.siemac.metamac..core*..*.find*(..)))" />

        <aop:advisor pointcut-ref="businessServiceFacadeCore" advice-ref="txAdviceCore" order="1" />
        <aop:advisor pointcut-ref="businessServiceFacadeCore" advice-ref="serviceContextStoreAdvice" order="2" />
        <aop:advisor pointcut-ref="businessServiceFacadeCore" advice-ref="errorHandlingAdvice" order="3" />
        <aop:advisor pointcut-ref="businessServiceFacadeCore" advice-ref="hibernateErrorHandlingAdvice" order="4" />
        <aop:advisor pointcut-ref="updatingBusinessServiceFacadeCore" advice-ref="jpaInterceptorFlushEagerCore" order="5" />

        <aop:aspect id="afterThrowing" ref="loggingHandlingAdvice">
            <aop:after-throwing pointcut-ref="businessServiceFacadeCore" throwing="ex" method="afterThrowing" />
        </aop:aspect>
    </aop:config>

    <aop:config>
        <aop:pointcut id="repositoryCore" expression="execution(public * org.siemac.metamac..core*..*Repository*.*(..))" />
        <!-- Need this when JUnit directly to Repository -->
        <aop:advisor pointcut-ref="repositoryCore" advice-ref="errorHandlingAdvice" order="3" />
        <aop:advisor pointcut-ref="repositoryCore" advice-ref="hibernateErrorHandlingAdvice" order="4" />
    </aop:config>

</beans>