package org.siemac.metamac.srm.core.concept.serviceapi.utils;

import java.util.UUID;

import org.siemac.metamac.common.test.utils.MetamacMocks;
import org.siemac.metamac.core.common.ent.domain.ExternalItem;
import org.siemac.metamac.core.common.enume.domain.TypeExternalArtefactsEnum;
import org.siemac.metamac.srm.core.base.utils.BaseDoMocks;
import org.siemac.metamac.srm.core.concept.domain.ConceptMetamac;
import org.siemac.metamac.srm.core.concept.domain.ConceptSchemeVersionMetamac;
import org.siemac.metamac.srm.core.concept.domain.ConceptType;
import org.siemac.metamac.srm.core.concept.enume.domain.ConceptRoleEnum;
import org.siemac.metamac.srm.core.concept.enume.domain.ConceptSchemeTypeEnum;
import org.siemac.metamac.srm.core.organisation.domain.OrganisationMetamac;

import com.arte.statistic.sdmx.srm.core.code.domain.CodelistVersion;
import com.arte.statistic.sdmx.srm.core.concept.serviceapi.utils.ConceptsDoMocks;
import com.arte.statistic.sdmx.v2_1.domain.enume.srm.domain.TypeRepresentationEnum;

public class ConceptsMetamacDoMocks extends ConceptsDoMocks {

    public static ConceptSchemeVersionMetamac mockConceptScheme(OrganisationMetamac maintainer) {

        ConceptSchemeVersionMetamac conceptSchemeVersion = new ConceptSchemeVersionMetamac();
        conceptSchemeVersion.setType(ConceptSchemeTypeEnum.OPERATION);
        conceptSchemeVersion.setRelatedOperation(mockOperationExternalItem(UUID.randomUUID().toString()));

        mockConceptScheme(conceptSchemeVersion, maintainer);
        return conceptSchemeVersion;
    }

    public static void fillConceptSchemeAutogeneratedMetadata(ConceptSchemeVersionMetamac entity) {
        entity.setLifeCycleMetadata(BaseDoMocks.mockLifeCycle());
        ConceptsDoMocks.fillConceptSchemeAutogeneratedMetadata(entity);
    }

    public static ConceptMetamac mockConcept(ConceptType conceptType, CodelistVersion coreRepresentation) {

        ConceptMetamac concept = new ConceptMetamac();
        concept.setPluralName(mockInternationalString("pluralName"));
        concept.setAcronym(mockInternationalString("acronym"));
        concept.setDescriptionSource(mockInternationalString("descriptionSource"));
        concept.setContext(mockInternationalString("context"));
        concept.setDocMethod(mockInternationalString("docMethod"));
        concept.setSdmxRelatedArtefact(ConceptRoleEnum.ATTRIBUTE);
        concept.setType(conceptType);
        concept.setDerivation(mockInternationalString("derivation"));
        concept.setLegalActs(mockInternationalString("legalActs"));

        mockConcept(concept, TypeRepresentationEnum.ENUMERATED, coreRepresentation);
        return concept;
    }

    public static void fillConceptAutogeneratedMetadata(ConceptMetamac entity) {
        ConceptsDoMocks.fillConceptAutogeneratedMetadata(entity);
    }

    public static ExternalItem mockOperationExternalItem(String code) {
        ExternalItem externalItem = new ExternalItem();
        externalItem.setCode(code);
        externalItem.setUri("http://" + code);
        externalItem.setUrn("urn:" + code);
        externalItem.setType(TypeExternalArtefactsEnum.STATISTICAL_OPERATION);
        externalItem.setManagementAppUrl("managementAppUrl" + MetamacMocks.mockString(10));
        externalItem.setTitle(mockInternationalString("title"));
        return externalItem;
    }

}
